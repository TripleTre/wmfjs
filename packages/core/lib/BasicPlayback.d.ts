import { IPlaybackCtx } from "./IPlayback";
import { WindowsMetaFile } from "./WindowsMetaFile";
import { SerializableRecord } from "./Serializable";
import { META_ARC, META_CREATEBRUSHINDIRECT, META_CREATEPENINDIRECT, META_DELETEOBJECT, META_ELLIPSE, META_ESCAPE, META_POLYGON, META_SELECTOBJECT, META_SETBKMODE, META_SETMAPMODE, META_SETPOLYFILLMODE, META_SETROP2, META_SETTEXTALIGN, META_SETTEXTCOLOR, META_SETWINDOWEXT, META_SETWINDOWORG } from "./records";
import { LogBrush, Pen, PointS } from "./structs";
import { SETMITERLIMIT } from "./escapes";
import { META_CHORD } from "./records/META_CHORD";
import { CenteredArc } from "./types";
export declare function isEscape(record: SerializableRecord): record is META_ESCAPE;
export declare type WMFObject = Pen | LogBrush;
export declare abstract class BasicPlayback {
    protected wmf: WindowsMetaFile;
    protected ctx: IPlaybackCtx;
    private objectTable;
    private viewExt;
    private viewOrigin;
    protected abstract updateViewBox(ext: PointS, origin: PointS): void;
    protected abstract drawPolygon(points: PointS[]): void;
    protected abstract drawArc(arc: CenteredArc, close: boolean): void;
    protected abstract drawEllipse(cx: number, cy: number, rx: number, ry: number): void;
    constructor(wmfObject: WindowsMetaFile);
    display(): void;
    protected getObject(index: number): WMFObject | null;
    protected putObject(obj: any): void;
    META_SETWINDOWEXT(record: META_SETWINDOWEXT): void;
    META_SETWINDOWORG(record: META_SETWINDOWORG): void;
    META_SETTEXTALIGN(record: META_SETTEXTALIGN): void;
    META_SETTEXTCOLOR(record: META_SETTEXTCOLOR): void;
    META_CREATEPENINDIRECT(record: META_CREATEPENINDIRECT): void;
    META_SETPOLYFILLMODE(record: META_SETPOLYFILLMODE): void;
    META_SETMAPMODE(record: META_SETMAPMODE): void;
    META_SETBKMODE(record: META_SETBKMODE): void;
    META_SETROP2(record: META_SETROP2): void;
    META_SELECTOBJECT(record: META_SELECTOBJECT): void;
    META_CREATEBRUSHINDIRECT(record: META_CREATEBRUSHINDIRECT): void;
    META_DELETEOBJECT(record: META_DELETEOBJECT): void;
    META_EOF(): void;
    META_POLYGON(record: META_POLYGON): void;
    ESCAPE_SETMITERLIMIT(escape: SETMITERLIMIT): void;
    META_ARC(record: META_ARC): void;
    META_CHORD(record: META_CHORD): void;
    META_ELLIPSE(record: META_ELLIPSE): void;
}
